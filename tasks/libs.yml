---

- name: Ensure that libraries directory exists.
  file: 
    path: "{{libraries_dir}}"
    state: directory
    owner: ansible
    group: www-data

- name: clone tuque
  git:  clone=yes update=no repo="https://github.com/Islandora/tuque.git" dest="{{libraries_dir}}/tuque"

- name: clone bagit lib
  git:  clone=yes update=no repo="https://github.com/scholarslab/BagItPHP.git" dest="{{libraries_dir}}/bagit"

- name: fmode 
  shell: git config core.filemode false
  args:
    chdir: "{{libraries_dir}}/tuque"

- name: fmode
  shell: git config core.filemode false
  args:
    chdir: "{{libraries_dir}}/tuque"

- name: Make global drush commands dir for islandora
  file: 
    path: /usr/local/share/drush/commands/islandora
    state: directory
    recurse: yes

- name: Move libraries drush defs into global dir
  shell: "cp {{modules_dir}}/{{item}} /usr/local/share/drush/commands/islandora/"
  with_items:
    - islandora_openseadragon/islandora_openseadragon.drush.inc
    - islandora_pdfjs/islandora_pdfjs.drush.inc
    - islandora_videojs/islandora_videojs.drush.inc
    - islandora_internet_archive_bookreader/islandora_internet_archive_bookreader.drush.inc

- name: Clear drush cache to register new commands.
  shell: drush cc drush
  args:
    chdir: "{{drupal_core_path}}"

- name: Ensure that unzip is available.
  apt: 
    name: unzip

- name: Ensure that videojs library is downloaded and in place.
  shell: "drush -y -v videojs-plugin"
  args:
    chdir: "{{drupal_core_path}}"
    creates: "{{libraries_dir}}/video-js"

- name: Ensure that pdf  library is downloaded and in place.
  shell: "drush -y -v pdfjs-plugin"
  args:
    chdir: "{{drupal_core_path}}"
    creates: "{{libraries_dir}}/pdfjs"

- name: Ensure that bookreader library is downloaded and in place.
  shell: "drush -y -v iabookreader-plugin"
  args:
    chdir: "{{drupal_core_path}}"
    creates: "{{libraries_dir}}/bookreader"

- name: Ensure that seadragon lib is downloaded and in place.
  shell: "drush -y -v openseadragon-plugin"
  args:
    chdir: "{{drupal_core_path}}"
    creates: "{{libraries_dir}}/openseadragon"

#- name: Ensure that the islandora_fedora_host var is set correctly before enabling...
#  script: "../files/islandora_base_url.sh {{drupal_core_path}}"

- name: Fetch and enable islandora dependency modules
  shell: "drush dl -n {{ item }} && drush -y en {{ item }}"
  args:
    chdir: "{{ drupal_core_path }}"
  with_items:
    - entity
    - rules
    - date
    - datepicker
    

- name: enable islandora
  shell: "drush -y -u 1 en islandora"
  args:
    chdir: "{{drupal_core_path}}"

- name: Enable remaining islandora modules
  shell: "drush -y -u 1 en {{item}}"
  args:
    chdir: "{{drupal_core_path}}"
  with_items:
    - islandora_openseadragon
    - php_lib 
    - objective_forms
    - islandora_solr 
    - islandora_solr_metadata 
    - islandora_solr_facet_pages 
    - islandora_solr_views
    - islandora_basic_collection 
    - islandora_pdf 
    - islandora_audio 
    - islandora_book 
    - islandora_compound_object 
    - islandora_disk_image
    - islandora_entities
    - islandora_entities_csv_import
    - islandora_basic_image
    - islandora_large_image
    - islandora_newspaper
    - islandora_video
    - islandora_web_archive
    - islandora_premis 
    - islandora_checksum
    - islandora_checksum_checker
    - islandora_book_batch
    - islandora_image_annotation
    - islandora_pathauto
    - islandora_pdfjs
    - islandora_videojs
    - islandora_jwplayer
    - xml_forms 
    - xml_form_builder
    - xml_schema_api
    - xml_form_elements
    - xml_form_api
    - jquery_update
    - zip_importer
    - islandora_basic_image
    - islandora_bibliography
    - islandora_compound_object
    - islandora_google_scholar
    - islandora_scholar_embargo
    - islandora_solr_config
    - citation_exporter
    - doi_importer
    - endnotexml_importer
    - pmid_importer
    - ris_importer
    - islandora_fits
    - islandora_ocr
    - islandora_oai
    - islandora_marcxml
    - islandora_simple_workflow
    - islandora_xacml_api
    - islandora_xacml_editor
    - xmlsitemap
    - islandora_xmlsitemap
    - colorbox
    - islandora_internet_archive_bookreader
    - islandora_bagit
    - islandora_batch_report
    - islandora_usage_stats
    - islandora_form_fieldpanel
    - islandora_altmetrics
    - islandora_populator
    - islandora_mods_display

- name: Now that the module is downloaded and enabled, ensure that colorbox lib is downloaded and in place.
  shell: "drush -y -v colorbox-plugin"
  args:
    chdir: "{{drupal_core_path}}"
    creates: "{{libraries_dir}}/colorbox"

- name: Fetch and enable ldl drupal  modules
  shell: "drush dl -n {{ item }} && drush -y en {{ item }}"
  args:
    chdir: "{{ drupal_core_path }}"
  with_items: "{{ ldl_specific_mods }}"


- name: Set variables for Islandora modules
  shell: "drush eval \"{{item}}\""
  args:
    chdir: "{{drupal_core_path}}"
  with_items:
    - "variable_set('islandora_audio_viewers', array('name' => array('none' => 'none', 'islandora_videojs' => 'islandora_videojs'), 'default' => 'islandora_videojs'))"
    - "variable_set('islandora_fits_executable_path', '{{fits_home}}/fits-{{fits_version}}/fits.sh')"
    - "variable_set('islandora_lame_url', '/usr/bin/lame')"
    - "variable_set('islandora_video_viewers', array('name' => array('none' => 'none', 'islandora_videojs' => 'islandora_videojs'), 'default' => 'islandora_videojs'))"
    - "variable_set('islandora_video_ffmpeg_path', '/usr/bin/ffmpeg')"
    - "variable_set('islandora_book_viewers', array('name' => array('none' => 'none', 'islandora_internet_archive_bookreader' => 'islandora_internet_archive_bookreader'), 'default' => 'islandora_internet_archive_bookreader'))"
    - "variable_set('islandora_book_page_viewers', array('name' => array('none' => 'none', 'islandora_openseadragon' => 'islandora_openseadragon'), 'default' => 'islandora_openseadragon'))"
    - "variable_set('islandora_large_image_viewers', array('name' => array('none' => 'none', 'islandora_openseadragon' => 'islandora_openseadragon'), 'default' => 'islandora_openseadragon'))"
    - "variable_set('islandora_use_kakadu', TRUE)"
    - "variable_set('islandora_newspaper_issue_viewers', array('name' => array('none' => 'none', 'islandora_internet_archive_bookreader' => 'islandora_internet_archive_bookreader'), 'default' => 'islandora_internet_archive_bookreader'))"
    - "variable_set('islandora_newspaper_page_viewers', array('name' => array('none' => 'none', 'islandora_openseadragon' => 'islandora_openseadragon'), 'default' => 'islandora_openseadragon'))"
    - "variable_set('islandora_pdf_create_fulltext', 1)"
    - "variable_set('islandora_checksum_enable_checksum', TRUE)"
    - "variable_set('islandora_ocr_tesseract', '/usr/bin/tesseract')"
    - "variable_set('islandora_batch_java', '/usr/bin/java')"
    - "variable_set('image_toolkit', 'imagemagick')"
    - "variable_set('imagemagick_convert', '/usr/bin/convert')"
    - "variable_set('bibutils_ris2xml_path', '/usr/bin/ris2xml')"
    - "variable_set('bibutils_endx2xml_path', '/usr/bin/endx2xml')"
    - "variable_set('islandora_metadata_display', 'islandora')"
